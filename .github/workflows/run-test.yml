name: Run Cypress Tests Daily

on:
  schedule:
    - cron: '0 0 * * *' # Runs daily at 00:00 UTC
  workflow_dispatch:

jobs:

  prepare-and-run-tests:
    name: Prepare Environment and Run Cypress Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        spec:
          - authentication
          - sortingFunctionality
          - shoppingCartFunctionality
          - checkoutProcess

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Run Cypress tests for ${{ matrix.spec }}
        id: cypress_run
        run: |
          # Define common reporter options
          REPORTER_OPTIONS="reportDir=results/reports,overwrite=false,html=false,json=true"
          JUNIT_OPTIONS="mochaFile=results/reports/test-results-${{ matrix.spec }}.xml"

          # Define common config options for screenshots, videos, and timeouts
          CONFIG_OPTIONS="screenshotsFolder=results/screenshots/${{ matrix.spec }},video=true,videosFolder=results/videos/${{ matrix.spec }},requestTimeout=90000,responseTimeout=90000,defaultCommandTimeout=90000"

          npx cypress run \
            --spec "cypress/e2e/${{ matrix.spec }}/${{ matrix.spec }}.cy.ts" \
            --reporter mochawesome \
            --reporter-options "${REPORTER_OPTIONS}" \
            --reporter junit \
            --reporter-options "${JUNIT_OPTIONS}" \
            --config "${CONFIG_OPTIONS}"
        continue-on-error: true

      - name: Upload Test Artifacts for ${{ matrix.spec }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.spec }}-test-artifacts
          path: |
            results/reports/
            results/screenshots/${{ matrix.spec }}/
            results/videos/${{ matrix.spec }}/
          retention-days: 7


  consolidate-reports:
    name: Consolidate Reports and Generate HTML
    runs-on: ubuntu-latest
    needs: prepare-and-run-tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all test artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-test-artifacts

      - name: List downloaded artifacts (Deep Inspection)
        run: |
          echo "--- Contents of all-test-artifacts ---"
          ls -R all-test-artifacts
          echo "--------------------------------------"
          # Also check for JSON files specifically
          echo "--- Searching for .json files in all-test-artifacts ---"
          find all-test-artifacts -name "*.json"
          echo "-------------------------------------------------------"


      - name: Install Mochawesome Merge and Report Generator
        run: npm install mochawesome-merge mochawesome-report-generator

      - name: Create merged_reports directory
        run: mkdir -p merged_reports

      - name: Copy Mochawesome JSON reports to a single directory
        run: |
          # Use the find command and check its output
          echo "Attempting to copy JSON files..."
          find all-test-artifacts -name "*.json" -path "*/reports/*" -exec cp {} merged_reports/ \;
          # Add a check to see what was actually copied
          echo "--- Contents of merged_reports after copy attempt ---"
          ls -l merged_reports/
          echo "-----------------------------------------------------"
        continue-on-error: true # Keep going even if no files are found here for now

      - name: Merge Mochawesome JSON reports
        run: |
          echo "Running mochawesome-merge..."
          npx mochawesome-merge "merged_reports/*.json" > cypress-combined-report.json
        # Add conditional execution: only run if there are JSON files to merge
        # This prevents the "Pattern matched no report files" error if no files were copied
        if: success() || failure() # Run regardless of previous step success/failure to show error if any

      - name: Generate combined Mochawesome HTML report
        run: |
          mkdir -p results/combined-html-report
          npx marge cypress-combined-report.json -o results/combined-html-report

      - name: Upload Combined HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: combined-mochawesome-html-report
          path: results/combined-html-report/
          retention-days: 7

